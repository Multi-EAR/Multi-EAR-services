#!/bin/bash

##############################################################################
# Script Name	: multi-ear-wifi
# Description	: Simply switch between wireless access point mode (hotspot)
#                 or regular wlan client mode to connect to an existing
#                 wireless network.
# Author       	: Pieter Smets
# Email         : mail@pietersmets.be
##############################################################################

# Name and path of the script
SCRIPT=$(basename $0)
SCRIPTPATH=$(dirname $0)


#
# Check if device is a Raspberry Pi
#
function is_raspberry_pi
{
    local pi=""
    if [ -f /proc/device-tree/model ];
    then
        pi=$( cat /proc/device-tree/model | tr '\0' '\n' | grep "Raspberry Pi" )
    fi
    echo $pi
}


#
# Message to display for usage and help.
#
function usage
{
    local txt=(
"Multi-EAR Wi-Fi access point mode control."
"Usage: $SCRIPT [options] <action>"
""
"Actions:"
"  --status       Returns if wireless access point mode is enabled."
"  --on           Enable wireless access point mode (host mode)."
"  --off          Disable wireless access point mode (client mode)."
"  --switch       Switch between wireless access point mode."
""
"Options:"
"  --help, -h     Print help."
"  --version, -v  Print version."
    )

    printf "%s\n" "${txt[@]}"
    exit 0
}


#
# Message to display when bad usage.
#
function badUsage
{
    local message="$1"
    local txt=(
"For an overview of the command, execute:"
"$SCRIPT --help"
    )

    [[ $message ]] && printf "$message\n"

    printf "%s\n" "${txt[@]}"
    exit -1
}


#
# Message to display for version.
#
function get_version
{
    ls $SCRIPTPATH/../lib/python3*/site-packages | \ 
    grep "multi_ear_services-" | \ 
    sed -En "s/multi_ear_services-(.*).dist-info/\1/p"
}


function version
{
    get_version
    exit 0
}


#
# Prints True if hostapd is active and enabled
#
function is_access_point_mode_enabled
{
    local active=$( systemctl is-active hostapd )
    local enabled=$( systemctl is-enabled hostapd )

    if [ "$active" == "active" ] && [ "$enabled" == "enabled" ];
    then
        echo True 
    else
        echo False
    fi
}


#
# Start hostapd
#
function do_start_hostapd
{
    local active=$( systemctl is-active hostapd )

    case "$active" in
        active)
        echo "hostapd is already active."
        ;;
        inactive)
        echo "hostapd (inactive) -> start."
        sudo systemctl start hostapd
        ;;
        failed)
        echo "hostapd (failed) -> restart."
        sudo systemctl restart hostapd
        ;;
        exited)
        echo "hostapd (exited) -> restart."
        sudo systemctl restart hostapd
        ;;
        *) break
    esac
}


#
# Stop hostapd
#
function do_stop_hostapd
{
    local active=$( systemctl is-active hostapd )

    case "$active" in
        active)
        echo "hostapd (active) -> stop."
        sudo systemctl stop hostapd
        ;;
        inactive)
        echo "hostapd is already stopped."
        ;;
        failed)
        echo "hostapd (failed) -> stop."
        sudo systemctl stop hostapd
        ;;
        exited)
        echo "hostapd (exited) -> stop."
        sudo systemctl stop hostapd
        ;;
        *) break
    esac
}


#
# Enable hostapd
#
function do_enable_hostapd
{
    local active=$( systemctl is-enabled hostapd )

    case "$active" in
        enabled)
        echo "hostapd is already enabled."
        ;;
        disabled)
        echo "hostapd (disabled) -> enable."
        sudo systemctl enable hostapd
        ;;
        *) break
    esac
}


#
# Disable hostapd
#
function do_disable_hostapd
{
    local active=$( systemctl is-enabled hostapd )

    case "$active" in
        enabled)
        echo "hostapd (enabled) -> disable."
        sudo systemctl disable hostapd
        ;;
        disabled)
        echo "hostapd is already disabled."
        ;;
        *) break
    esac
}


#
# Enable wireless access point mode
#
function do_enable_access_point_mode
{
    echo "Enable Multi-EAR Wi-Fi access point mode"
    do_start_hostapd
    do_enable_hostapd
    sleep 5
    # sudo reboot
}


#
# Disable wireless access point mode
#
function do_disable_access_point_mode
{
    echo "Disable Multi-EAR Wi-Fi access point mode"
    do_stop_hostapd
    do_disable_hostapd
    sleep 5
    # sudo reboot
}


#
# Switch the wireless access point mode
#
function do_switch_access_point_mode
{
    if [ is_access_point_mode_enabled ];
    then
        do_disable_access_point_mode
    else
        do_disable_access_point_mode
    fi
}


#
# Process options
#
while (( $# ));
do
    case "$1" in
        --help | -h) usage
        ;;
        --version | -v) version
        ;;
        *) break
    esac
    shift
done


#
# Check if device is Raspberry Pi
#
if [ "x$( is_raspberry_pi )" == "x" ];
then
    echo "Error: device is not a Raspberry Pi!"
    exit 1
fi


#
# Perform action
#
case "${1}" in
    --on) do_enable_access_point_mode
    ;;
    --off) do_disable_access_point_mode
    ;;
    --switch) do_switch_access_point_mode
    ;;
    --status) is_access_point_mode_enabled
    ;;
    *) badUsage "Unknown command ${1}."
    ;;
esac

exit 0
